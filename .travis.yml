language: python
sudo: required
dist: bionic
install:
  - pip install --upgrade pip wheel setuptools
  - pip install virtualenv tox
before_script:
  - sh -c "if [ '$DATABASE_ENGINE' = 'pgsql' ]; then psql -c 'DROP DATABASE IF EXISTS
    gdpr_assist_tests;' -U postgres; fi"
  - sh -c "if [ '$DATABASE_ENGINE' = 'pgsql' ]; then psql -c 'create database gdpr_assist_tests;'
    -U postgres; fi"
  - sh -c "if [ '$DATABASE_ENGINE' = 'mysql' ]; then mysql -e 'create database IF NOT
    EXISTS gdpr_assist_tests'; fi"
script:
  - tox
matrix:
  include:
    - python: 2.7
      env: TOXENV=py27-django1.11
    - python: 2.7
      env: TOXENV=py27-django1.11 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 2.7
      env: TOXENV=py27-django1.11 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    - python: 3.7
      env: TOXENV=py37-django1.11
    - python: 3.7
      env: TOXENV=py37-django1.11 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.7
      env: TOXENV=py37-django1.11 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    - python: 3.7
      env: TOXENV=py37-django2.0
    - python: 3.7
      env: TOXENV=py37-django2.0 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.7
      env: TOXENV=py37-django2.0 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    - python: 3.7
      env: TOXENV=py37-django2.1
    - python: 3.7
      env: TOXENV=py37-django2.1 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.7
      env: TOXENV=py37-django2.1 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    - python: 3.7
      env: TOXENV=py37-django2.2
    - python: 3.7
      env: TOXENV=py37-django2.2 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.7
      env: TOXENV=py37-django2.2 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    # - python: 3.7
    #   env: TOXENV=py37-django3.0
    # - python: 3.7
    #   env: TOXENV=py37-django3.0 DATABASE_ENGINE=mysql DATABASE_USER=travis
    #   services: mysql
    # - python: 3.7
    #   env: TOXENV=py37-django3.0 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
    #   services: postgres

    - python: 3.8
      env: TOXENV=py38-django1.11
    - python: 3.8
      env: TOXENV=py38-django1.11 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.8
      env: TOXENV=py38-django1.11 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    - python: 3.8
      env: TOXENV=py38-django2.0
    - python: 3.8
      env: TOXENV=py38-django2.0 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.8
      env: TOXENV=py38-django2.0 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    - python: 3.8
      env: TOXENV=py38-django2.1
    - python: 3.8
      env: TOXENV=py38-django2.1 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.8
      env: TOXENV=py38-django2.1 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    - python: 3.8
      env: TOXENV=py38-django2.2
    - python: 3.8
      env: TOXENV=py38-django2.2 DATABASE_ENGINE=mysql DATABASE_USER=travis
      services: mysql
    - python: 3.8
      env: TOXENV=py38-django2.2 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
      services: postgres

    # - python: 3.8
    #   env: TOXENV=py38-django3.0
    # - python: 3.8
    #   env: TOXENV=py38-django3.0 DATABASE_ENGINE=mysql DATABASE_USER=travis
    #   services: mysql
    # - python: 3.8
    #   env: TOXENV=py38-django3.0 DATABASE_ENGINE=pgsql DATABASE_USER=postgres
    #   services: postgres
