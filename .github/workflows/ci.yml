name: Tests

# Test django_gdpr_assist on:
#   all supported Django and Python versions
#   against postgresql and mysql

on:
  push:
  pull_request:

jobs:
  test-postgres:
    name: py-${{ matrix.python-version }} dj-${{ matrix.django-version }} PostgreSQL
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - "2.2"
          - "3.0"
          - "3.1"
          - "3.2"
          - "4.0"
        exclude:
          - python-version: "3.6"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.10"
            django-version: "2.2"
          - python-version: "3.10"
            django-version: "2.1"
    services:
      postgres:
        image: postgres:10.8
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ipdb django-yaa-settings>=1.1 model_bakery freezegun pillow codecov
          pip install psycopg2-binary>2.4.1
          pip install "django~=${{ matrix.django-version }}.0"
      - name: Test
        run: |
          coverage run --source='gdpr_assist' setup.py test
        env:
          DATABASE_ENGINE: postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          name: ${{ matrix.python-version }}-${{ matrix.django-version }}-postgres

  test-mysql:
    name: py-${{ matrix.python-version }} dj-${{ matrix.django-version }} MySQL
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - "2.2"
          - "3.0"
          - "3.1"
          - "3.2"
          - "4.0"
        exclude:
          - python-version: "3.6"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.10"
            django-version: "2.2"
          - python-version: "3.10"
            django-version: "2.1"
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ipdb django-yaa-settings>=1.1 model_bakery freezegun pillow codecov
          pip install mysqlclient>=1.3.3
          pip install "django~=${{ matrix.django-version }}.0"
      - name: Test
        run: |
          coverage run --source='gdpr_assist' setup.py test
        env:
          DATABASE_ENGINE: mysql
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 3306
          DATABASE_USER: root
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          name: ${{ matrix.python-version }}-${{ matrix.django-version }}-mysql